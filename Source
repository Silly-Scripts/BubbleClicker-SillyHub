-- bubble gum clicker

if game.PlaceId == 11746859781 then 

    local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
    local Window = OrionLib:MakeWindow({Name = "Silly Hub", HidePremium = false, IntroText = "Silly Hub", SaveConfig = true, ConfigFolder = "OrionTest"})


-- Anti AFK

spawn (function()
do 
    game:service'Players'.LocalPlayer.Idled:connect(function()
        bb:CaptureController()bb:ClickButton2(Vector2.new())
        ab.Text="Roblox kicked you but we didnt let them!"wait(2)ab.Text="Status : Active"end) 
        do 
        OrionLib:MakeNotification({
            Name = "Anti AFK",
            Content = "Anti AFK is on",
            Image = "rbxassetid://4483345998",
            Time = 5})
        end 
    end
end)

-- functions

function DoBubble()
    spawn (function()
        while _G.AutoBubble == true do
            local args = {[1] = {[1] = {[1] = false}, [2] = {[1] = 2 } }}
            game:GetService("ReplicatedStorage").Remotes:FindFirstChild("blow bubble"):FireServer(unpack(args))
         wait(0.05)
        end
    end)
 end



 function InstaWorld()
    spawn (function() do
            local args = {[1] = {[1] = {[1] = "Sky Iland"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Lucky Landing"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Heaven"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Space"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "The Void"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Fairy World"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "XP Island"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args)) 
            local args = {[1] = {[1] = {[1] = "Coral Island"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Shipwreck Island"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Reaper's Hideout"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Deep Ocean"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "Kraken's Krest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args))
            local args = {[1] = {[1] = {[1] = "The Lost City"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("unlock island"):FireServer(unpack(args)) do 
                OrionLib:MakeNotification({
                    Name = "Silly has Gifted you the Worlds",
                    Content = "You have unlocked the Worlds... if this is your first time",
                    Image = "rbxassetid://4483345998",
                    Time = 5
                })
         wait()
            end
        end 
    end)
 end

 function Gifts()
    spawn (function()
        while _G.AutoGift == true do
            local args = {[1] = {[1] = {[1] = 1},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 2},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 3},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 4},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 5},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 6},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 7},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 8},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 9},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 10},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 11},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
            local args = {[1] = {[1] = {[1] = 12},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem free gift"):InvokeServer(unpack(args))
         wait(30)
        end
    end)
 end

 function DoCode()
    spawn (function() do
        OrionLib:MakeNotification({
            Name = "Codes!",
            Content = "Applying Codes now",
            Image = "rbxassetid://4483345998",
            Time = 5})
            local args = {[1] = {[1] = {[1] = "gofast"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "secrets"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "season1"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args))end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "bubblegum"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "bannana"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "bandana"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "nana"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "OPE"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "scramble"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "stayfrosty"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "lucky"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "happynewyear"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "2022"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "OmgSanta"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "Rudolph"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "Release"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "underthesea"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)
            local args = {[1] = {[1] = {[1] = "spongebob"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("redeem twitter code"):InvokeServer(unpack(args)) end do 
            wait(1)

            wait()
        end
    end)
 end

 function GroupRewards()
    spawn (function() do 
        local args = {[1] = {[1] = {[1] = false},[2] = {[1] = 2}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("get group rewards"):InvokeServer(unpack(args))
         wait()
        end
    end)
 end

 function SkyChest()
    spawn (function()
        if _G.AutoChest == true then do
        function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Sky Chest"].CFrame) wait(.5) end do 
            local args = {[1] = {[1] = {[1] = "Sky Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
            wait() end
        end end)
 end

 function HeavenlyChest()
    spawn (function()
        if _G.AutoChest == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Heavenly Chest"].CFrame) wait(.5) end do 
            local args = {[1] = {[1] = {[1] = "Heavenly Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
            wait() end
        end end)
    end

function VoidChest()
        spawn (function()
            if _G.AutoChest == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Void Chest"].CFrame) wait(.5) end do 
                    local args = {[1] = {[1] = {[1] = "Void Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
                wait() end
            end end)
    end

function XPChest()
        spawn (function()
            if _G.AutoChest == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["XP Chest"].CFrame) wait(.5) end do 
                    local args = {[1] = {[1] = {[1] = "XP Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
               wait() end
            end end)
    end

function SunkenChest()
        spawn (function()
            if _G.AutoChest == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Sunken Chest"].Lock.CFrame) wait(.5) end do 
                    local args = {[1] = {[1] = {[1] = "Sunken Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
               wait()  end
                    end end) 
end

function CoralChest()
        spawn (function()
            if _G.AutoChest == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Coral Chest"].Lock.CFrame) wait(.5) end do 
                    local args = {[1] = {[1] = {[1] = "Coral Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
              wait()   end
            end end)
    end

function AthenaChest()
        spawn (function()
            if _G.AutoChest == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,-7,0) end teleportTO(game:GetService("Workspace").MAP.Chests["Athena Chest"].Lock.CFrame) wait(.5) end do 
                    local args = {[1] = {[1] = {[1] = "Athena Chest"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect chest"):FireServer(unpack(args)) wait(.5) end do 
              wait()   end
            end end)
    end

 function SpinWheel()
    spawn (function()
       do
    local args = {[1] = {[1] = {[1] = false},[2] = {[1] = 2}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("free wheel spin"):InvokeServer(unpack(args))
            wait()
        end
    end)
 end

function TPBasic()
    spawn (function()
            if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Common Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Common Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Common Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                end
            end
        end end 
    end) 
end

function TPSpotted()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Spotted Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Spotted Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Spotted Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end end end 
    end
end)
end 

function TPSafe()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Safe Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Safe Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Safe Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                end
            end
        end end
    end)
end

function TPMagma()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Magma Egg"].EGG.CFrame) do wait(1)
            wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Magma Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Magma Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                end
            end
        end end 
    end)
end

function TPVoid()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Void Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "void Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Void Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end
    end)
end

function TPLantern()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Lantern Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Lantern Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Lantern Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end
    end)
end

function TPGalaxy()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Galaxy Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Galaxy Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Galaxy Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end 
    end)
end

function TPFrosted()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Frosted Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Frosted Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Frosted Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))  
        end
            end
        end end
    end)
end

function TPBanana()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Banana Bandana on Nana Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Banana Bandana on Nana Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Banana Bandana on Nana Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end
    end)
end

function TPNightmare()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Nightmare Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Nightmare Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Nightmare Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end
    end)
end

function TPGoldFish()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Goldfish Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Goldfish Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Goldfish Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end 
    end)
end

function TPPineapple()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Pineapple Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Pineapple Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Pineapple Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end
        end end 
    end)
end

function TPSnail()
    spawn (function()
        if _G.AutoEgg == true then do
            function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Snail Egg"].EGG.CFrame) do wait(1)
                wait(0.5)
                do local args = {[1] = {[1] = {[1] = true,[2] = "Snail Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                wait(0.5)
                local args = {[1] = {[1] = {[1] = "Snail Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                
        end
            end 
        end
    end end) end

function TPBunny()
        spawn (function()
            if _G.AutoEgg == true then do
                function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Bunny Egg"].EGG.Ears.CFrame) do wait(1)
                    wait(0.5)
                    do local args = {[1] = {[1] = {[1] = true,[2] = "Bunny Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                    wait(0.5)
                    local args = {[1] = {[1] = {[1] = "Bunny Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                    
            end
                end 
            end
        end end) end

function TPChocolate()
            spawn (function()
                if _G.AutoEgg == true then do
                    function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Chocolate Egg"].EGG.CFrame) do wait(1)
                        wait(0.5)
                        do local args = {[1] = {[1] = {[1] = true,[2] = "Chocolate Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                        wait(0.5)
                        local args = {[1] = {[1] = {[1] = "Chocolate Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                        
                end
                    end 
                end
    end end) end

function TPDucky()
                spawn (function()
                    if _G.AutoEgg == true then do
                        function teleportTO(placeCFrame) game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) end teleportTO(game:GetService("Workspace").MAP.Eggs["Ducky Egg"].Base.CFrame) do wait(1)
                            wait(0.5)
                            do local args = {[1] = {[1] = {[1] = true,[2] = "Ducky Egg"},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("toggle auto hatch"):FireServer(unpack(args))
                            wait(0.5)
                            local args = {[1] = {[1] = {[1] = "Ducky Egg",[2] = true},[2] = {[1] = false,[2] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("buy egg"):InvokeServer(unpack(args))
                            
                    end
                        end 
                    end
                end end) end

function Getnercoin()
    local pickups = game:GetService("ReplicatedStorage").Remotes:FindFirstChild("get pickups"):InvokeServer({{false}, {2}})
    vipcoins = {}
    for i,v in pairs(pickups[1][1]) do
        if v.a == "VIP" then
            table.insert(vipcoins, i)
        end
    end
    local target = nil
    local tardis = math.huge
    for i,v in pairs(game.Workspace.Stuff.Pickups:GetChildren()) do
        if not table.find(vipcoins, v.Name) and v:FindFirstChild("POS") then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.POS.Position).magnitude
            if mag < tardis then
                tardis = mag
                target = v.POS
            end
        end
    end
    return target
end

function Grabpickup()
    spawn (function()
    while _G.AutoPickups and task.wait() do
    if Getnercoin() ~= nil then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Getnercoin().CFrame 
        
                end
            end
        end)
end

function INFJumper()
    spawn (function()
    game:GetService("UserInputService").jumpRequest:Connect(function()
        if _G.infjmp == true then
            game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass"Humanoid":ChangeState("Jumping")
            end 
        end) end) end 

function WalkSpeed(GetSpeed)
        getgenv().WalkSpeedValue = GetSpeed;
        local Player = game:service'Players'.LocalPlayer
        Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue
        end)
        Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue
    end 

function ServerBoosts()
    spawn (function()
       if _G.AutoBoost == true then do
        game:GetService("ReplicatedStorage")["Server Events"]["Super Lucky"].Value = true
        game:GetService("ReplicatedStorage")["Server Events"]["Triple Hatch"].Value = true
        game:GetService("ReplicatedStorage")["Server Events"]["2x Diamonds"].Value = true
        end end
    end) end
 


    function Coinoty()
        spawn (function()
            if _G.AutoPickups == true then do 
            OrionLib:MakeNotification({
                Name = "Auto Pickup",
                Content = "😈No Coins for them! 😈",
                Image = "rbxassetid://4483345998",
                Time = 6})   end   end 
        end) end 

    function Seasopass()
            spawn (function()
                while _G.ClaimSeason == true do 
        local args = {[1] = {[1] = {[1] = "1"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "2"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "3"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "4"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "5"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "6"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "7"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "8"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "9"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "10"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "11"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "12"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "13"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "14"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "15"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "16"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "17"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "18"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "19"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "20"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "21"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "22"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = "23"},[2] = {[1] = false}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("claim pass prize"):FireServer(unpack(args))
        wait(8.5)
        local args = {[1] = {[1] = {[1] = false},[2] = {[1] = 2}}}game:GetService("ReplicatedStorage").Remotes:FindFirstChild("restart bubble pass"):FireServer(unpack(args))
        wait(8.5)
        end end) end  


    function GetEggs()
            spawn(function()
                while _G.GetEgg == true do 
                    -- find the "Eggs" object
                    local eggs = game:GetService("Workspace").Stuff.Eggs
                    if not eggs then
                        print("Couldn't find the 'Eggs' object.")
                        return
                    end
                
                    -- find all the children of the "Eggs" object
                    local eggChildren = eggs:GetChildren()
                
                    -- find the number of egg children
                    local numEggChildren = #eggChildren
                
                    -- generate a random index to pick a random egg child
                    math.randomseed(os.time())
                    local randomEggIndex = math.random(numEggChildren)
                
                    -- find the random egg child and its POS children
                    local randomEggChild = eggChildren[randomEggIndex]
                    local posChildren = randomEggChild:GetChildren()
                
                    for j, posChild in ipairs(posChildren) do
                        if posChild.Name == "POS" then
                            -- get the CFrame of the "POS" child
                            local cframe = posChild.CFrame
                
                            for k, child in ipairs(posChildren) do
                                function teleportTO(placeCFrame) 
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame + Vector3.new(0, 0, 0)
                                end 
                
                                teleportTO(cframe)
                                wait(0.2)
                                local args = {[1] = {[1] = {[1] = randomEggChild.Name}, [2] = {[1] = false}}}
                                game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect egg"):FireServer(unpack(args))
                                wait(0.2)
                                teleportTO(game:GetService("Workspace").MAP.NPCs.Bunny.HumanoidRootPart.CFrame)
                                wait(0.2)
                                local args = {[1] = {[1] = {[1] = false}, [2] = {[1] = 2}}}
                                game:GetService("ReplicatedStorage").Remotes:FindFirstChild("give bunny egg"):FireServer(unpack(args))
                                wait(0.2)
                            end
                        end
                    end
                    
                    -- wait a little bit before looking for another egg
                    wait()
                end
            end)
        end
        

function KeyFind()
            spawn (function()
                do
                    function teleportTO(placeCFrame) 
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) 
                    end 
                    teleportTO(game:GetService("Workspace").MAP.KEY) end 
            end)
         end


function GetShards()
            spawn(function()
                while _G.Shard == true do 
                    local shards = game:GetService("Workspace").MAP.Shards
                    if not shards then
                        print("Couldn't find the 'Shards' object.")
                        wait(2)
                        return
                    end
                    
                    local goldCFrame = nil
                    local shardName = nil
                    
                    for _, shard in ipairs(shards:GetChildren()) do
                        local gold = shard:FindFirstChild("Meshes/Ice Shard_Icosphere")
                        if gold then
                            goldCFrame = gold.CFrame
                            shardName = shard.Name
                            break -- exit the loop as soon as we find the first Gold CFrame
                        end
                    end
                    
                    if goldCFrame then
                        function teleportTO(placeCFrame) 
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame + Vector3.new(0,0,0) 
                        end 
                        teleportTO(goldCFrame)
                        wait(0.2)
                        local args = {[1] = {[1] = {[1] = shardName},[2] = {[1] = false}}}
                        game:GetService("ReplicatedStorage").Remotes:FindFirstChild("take shard"):FireServer(unpack(args))
                        wait(0.2)
                    else
                        print("Couldn't find a Gold CFrame.")
                    end
                    
                    wait(1) -- add a 1 second delay before the next loop iteration
                end 
            end)
        end

function GetEggers(EggChosed)
            spawn(function()
                while _G.FindEgg == true do 
                    -- find the "Eggs" object
                    local eggs = game:GetService("Workspace").Stuff.Eggs
                    if not eggs then
                        print("Couldn't find the 'Eggs' object.")
                        return
                    end
                    
                    -- find all the children of the "Eggs" object
                    local eggChildren = eggs:GetChildren()
                    
                    -- find the number of egg children
                    local numEggChildren = #eggChildren
                    
                    -- generate a random index to pick a random egg child
                    math.randomseed(os.time())
                    local randomEggIndex = math.random(numEggChildren)
                    
                    -- find the random egg child and its POS children
                    local randomEggChild = eggChildren[randomEggIndex]
                    local posChildren = randomEggChild:GetChildren()
                    
                    for j, posChild in ipairs(posChildren) do
                        if posChild.Name == "POS" then
                            -- get the CFrame of the "POS" child
                            local cframe = posChild.CFrame
                            
                            for k, child in ipairs(posChildren) do
                                if child.Name == EggChosed then
                                    function teleportTO(placeCFrame) 
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = placeCFrame+Vector3.new(0,0,0) 
                                    end 
                                    
                                    teleportTO(cframe)
                                    wait(0.15)
                                    local args = {[1] = {[1] = {[1] = randomEggChild.Name},[2] = {[1] = false}}}
                                    game:GetService("ReplicatedStorage").Remotes:FindFirstChild("collect egg"):FireServer(unpack(args))
                                    wait(0.15)
                                    teleportTO(game:GetService("Workspace").MAP.NPCs.Bunny.HumanoidRootPart.CFrame)
                                    wait(0.15)
                                    local args = {[1] = {[1] = {[1] = false},[2] = {[1] = 2}}}
                                    game:GetService("ReplicatedStorage").Remotes:FindFirstChild("give bunny egg"):FireServer(unpack(args))
                                    wait(0.25)
                                end
                            end
                        end
                    end
                    wait() -- wait before checking for eggs again
                end
            end)
        end
        

-- Tabs 
    local AutoFarmTab = Window:MakeTab({
        Name = "Auto Farm",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local AutoHatchTab = Window:MakeTab({
        Name = "Auto Hatch",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local EasterTab = Window:MakeTab({
        Name = "Easter!",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local MiscTab = Window:MakeTab({
        Name = "Misc",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    local PersonTab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    
    local CredTab = Window:MakeTab({
        Name = "Credit",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

-- Toggles
    AutoFarmTab:AddToggle({
        Name = "Auto Bubble",
        Default = false,
        Callback = function(Value)
            _G.AutoBubble = Value
            DoBubble()
        end  })

    AutoHatchTab:AddToggle({
            Name = "Common Egg",
            Default = false,
            Callback = function(Value)
                _G.AutoEgg = Value

                TPBasic()
            end  })


    AutoHatchTab:AddToggle({
                Name = "Spotted Egg",
                Default = false,
                Callback = function(Value)
                    _G.AutoEgg = Value
                    TPSpotted()

        end  })

    AutoHatchTab:AddToggle({
                    Name = "Safe Egg",
                    Default = false,
                    Callback = function(Value)
                        _G.AutoEgg = Value
                        TPSafe()

            end  })
        
    AutoHatchTab:AddToggle({
                Name = "Magma Egg",
                Default = false,
                Callback = function(Value)
                    _G.AutoEgg = Value
                    TPMagma()

        end  })

    MiscTab:AddToggle({
            Name = "Auto Claim Gifts",
            Default = false,
            Callback = function(Value)
                _G.AutoGift = Value
                Gifts()
    end  })

    AutoFarmTab:AddParagraph("⚠️","The 'Claim Chest' feature is currenty broken please wait for fix")

    AutoHatchTab:AddToggle({
        Name = "Void Egg",
        Default = false,
        Callback = function(Value)
            _G.AutoEgg = Value
            TPVoid()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Lantern Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPLantern()
 
    end  })

    AutoHatchTab:AddToggle({
    Name = "Galaxy Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPGalaxy()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Frosted Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPFrosted()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Banana Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPBanana()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Nightmare Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPNightmare()

    end  })

    AutoHatchTab:AddToggle({
        Name = "Goldfish Egg",
        Default = false,
        Callback = function(Value)
            _G.AutoEgg = Value
            TPGoldFish()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Pineapple Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPPineapple()

    end  })

    AutoHatchTab:AddToggle({
    Name = "Snail Egg",
    Default = false,
    Callback = function(Value)
        _G.AutoEgg = Value
        TPSnail()

    end  })

    AutoHatchTab:AddToggle({
        Name = "Chocolate Egg",
        Default = false,
        Callback = function(Value)
            _G.AutoEgg = Value
            TPChocolate()
     
        end  })

    AutoHatchTab:AddToggle({
            Name = "Ducky Egg",
            Default = false,
            Callback = function(Value)
                _G.AutoEgg = Value
                TPDucky()
         
            end  })

    AutoHatchTab:AddToggle({
                Name = "Bunny Egg",
                Default = false,
                Callback = function(Value)
                    _G.AutoEgg = Value
                    TPBunny()
             
                end  })

    AutoFarmTab:AddToggle({
        Name = "Farm Pickups",
        Default = false,
        Callback = function(Value)
            _G.AutoPickups = Value
            Grabpickup()
            Coinoty()
        end  })

    MiscTab:AddToggle({
            Name = "Auto Server Boost",
            Default = false,
            Callback = function(Value)
                _G.AutoBoost = Value
                ServerBoosts()
        end  })

    PersonTab:AddToggle({
            Name = "Inf Jump",
            Default = false,
            Callback = function(Value)
                _G.infjmp = Value
                INFJumper() 
        end  })

    AutoFarmTab:AddToggle({
            Name = " Auto buy Season Pass",
            Default = false,
            Callback = function(Value)
                _G.ClaimSeason = Value
                Seasopass()
            end  })

EasterTab:AddToggle({
    Name = "Auto Grab Eggs",
        Default = false,
        Callback = function(Value)
            _G.GetEgg = Value
            GetEggs()
        end  })

        EasterTab:AddToggle({
            Name = "Find Shards",
            Default = false,
            Callback = function(Value)
                _G.Shard = Value
                GetShards()

            end  })


    EasterTab:AddToggle({
                Name = "Find Certain Egg",
                Default = false,
                Callback = function(Value)
                    _G.FindEgg = Value
                    GetEggers(_G.EggChoice)
        end  })

        EasterTab:AddDropdown({
            Name = "Egg Choice",
            Default = "Common Egg",
            Options = {"Common Egg", "Golden Egg", "Striped Egg", "Frosted Egg", "Magma Egg", "Angel Egg", "Dragon Egg", "Wizard Egg", "Scrambled", "Egg of Growth", "Tomato Egg", "Lantern Egg"},
            Callback = function(Value)
                _G.EggChoice = Value
            end    
        })

        EasterTab:AddParagraph("Find Egg","Takes A while to Scan Eggs Sorry!")

-- Sliders

PersonTab:AddSlider({
	Name = "Walk Speed",
	Min = 0,
	Max = 150,
	Default = 25,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		print(Value)
        WalkSpeed(Value) 
    end})

-- Buttons

MiscTab:AddButton({
	Name = "Unlock Worlds!",
	Callback = function()
     InstaWorld()
  	end})

MiscTab:AddButton({
	Name = "Claim Group Rewards",
	Callback = function()
     GroupRewards()
  	end})

MiscTab:AddButton({
        Name = "Claim Prize Wheel",
        Callback = function()
            SpinWheel()
    end})

MiscTab:AddButton({

        Name = "Claim Codes",
        Callback = function()
            DoCode()
    end})

    EasterTab:AddButton({

        Name = "Find Hidden Key",
        Callback = function()
            KeyFind()
    end})


    CredTab:AddParagraph("Credits","Made by: Silly#3858     Helped by: W41K3R#0363")

end 
OrionLib:Init()
